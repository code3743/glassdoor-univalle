---
import Layout from "../layouts/Layout.astro";

const token = Astro.locals.token;
const user = Astro.locals.user;

if (!token) {
   return Astro.redirect("/login");
}

if (user?.name) {
   return Astro.redirect("/evaluation");
}
---

<Layout
  title="Crear alias - Glassdoor Univalle"
  description="Ayudar a otros estudiantes a elegir sus materias."
>
<div id="overlay">
  <div id="spinner"></div>
</div>
  <div class="flex justify-center">
    <img src="/favicon.svg" alt="Logo Univalle" class="h-16" />
  </div>
  <h1 class="text-2xl font-semibold text-center text-white mb-4"></h1>
  <form
    action="/api/user"
    method="POST"
    class="space-y-4 flex flex-col items-center"
  >
    <div class="max-w-md mx-auto font-[sans-serif] my-2 w-full">
      <label for="alias" class="block text-sm font-medium text-gray-300 mb-1"
        >Alias</label
      >
      <div class="rounded-md overflow-hidden">
        <input
          type="text"
          id="alias"
          name="alias"
          placeholder="Ingresa tu alias"
          class="w-full outline-none bg-white text-gray-600 text-sm px-4 py-3 border border-gray-300 focus:border-[#EE322F] focus:ring-2 focus:ring-[#EE322F] transition"
          required
        />
      </div>
    </div>

    <button
      type="submit"
      class="rounded-md w-full bg-[#EE322F] text-white font-semibold text-sm px-6 py-3 max-w-md mx-auto font-[sans-serif] hover:bg-[#d52a27] transition my-6"
    >
      Guardar
    </button>

    <a href="/api/auth">
      <button
        type="button"
        id="cancel"
        class="rounded-md w-full text-[#EE322F] font-semibold text-sm px-6 py-3 max-w-md mx-auto font-[sans-serif] transition my-6"
      >
        Salir
      </button>
    </a>
  </form>

  <p
    class="mt-6 text-sm text-center text-gray-400 max-w-md mx-auto font-[sans-serif] my-4"
  >
    Establece un alias para tu cuenta de Glassdoor Univalle.
  </p>
  <p id="error" class="text-center text-red-500 font-semibold my-3"></p>
</Layout>

<style>
  #overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.8); 
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999; 
      opacity: 0; 
      visibility: hidden;
      transition: opacity 0.5s ease, visibility 0.5s ease; 
  }
  #overlay.active {
      opacity: 1;
      visibility: visible; 
  }
</style>


<script>
      import { navigate } from 'astro:transitions/client';
      import { Spinner } from 'spin.js';

      const overlay = document.getElementById('overlay')!;
      const target = document.getElementById('spinner')!;
      const error = document.getElementById('error')!;
        
      
      const spinner = new Spinner({
            color: '#000',
            lines: 12, 
           
        });

      
      function showSpinner() {
          overlay.classList.add('active');
          spinner.spin(target);
      }

      function hideSpinner() {
          overlay.classList.remove('active');
          spinner.stop();
      }

      const form = document.querySelector('form')!;

      form.addEventListener('submit', async (event) => {
          event.preventDefault();
          showSpinner();
          const formData = new FormData(form);
          const response = await fetch(form.action, {
              method: form.method,
              body: formData,
          }); 
          const data = await response.json();
          hideSpinner();
          if(response.ok){
            await getUser();
            return;
          }
          error.textContent = data.message;
      });

      async function getUser() {
          const response = await fetch('/api/user');
          const data = await response.json();
          if (response.ok) {
             if (data.name){
              return await navigate('/evaluation');
             }

             return await navigate('/profile');
          }

          error.textContent = data.message;
      }
</script>
