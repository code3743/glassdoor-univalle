---
interface SearchResult {
    id: number;
    teacher_name: string;
    subject_name: string;
    total_rating: number;
    average_rating: number;
}

import Introduction from "../components/Introduction.astro";
import ItemRating from "../components/ItemRating.astro";
import Logo from "../components/Logo.astro";
import Searcher from "../components/Searcher.astro";
import ENDPOINTS from "../config/config";
import Layout from "../layouts/Layout.astro";
const q = Astro.url.searchParams.get('q') || '';
const response = await fetch(ENDPOINTS.SEARCH(q));
const data = await response.json();
const results: SearchResult[] = data.teachers || [];
---


<Layout title="Glassdor Univalle" description="Busca la calificaciÃ³n que tienen los profesores">
    <Logo />
	<Searcher initialQuery={q}/>
    <section aria-label="ReseÃ±as recientes" class="mt-24">
		<div class="px-4 mx-auto max-w-screen-xl">
            {!results.length ? <Introduction description="Â¡Ups! No encontramos nada para tu bÃºsqueda. Â¿Por quÃ© no pruebas con otro profe? ðŸš€"/> :
                <h3 class="my-4 " >
                    Resultados de la busqueda: <span class="text-[#EE322F] font-semibold ml-1">{q?.toLocaleUpperCase()}</span>
                </h3>
                <div class="grid gap-6 md:grid-cols-2">
                    {
			            results.map(result => {
			            	const { id, teacher_name, subject_name, total_rating, average_rating,  } = result;
			            	return  <ItemRating id={id}  name={teacher_name} subject={subject_name} total={total_rating}  rating={average_rating} />  
			            })
			        }
		        </div>
            }
		</div>
	</section>
</Layout>